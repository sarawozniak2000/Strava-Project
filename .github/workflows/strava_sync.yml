name: Weekly Strava Sync

on:
  schedule:
    - cron: '0 12 * * 1'   # Every Monday at 12:00 UTC
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # ensure GCP + Drive libraries are present
          pip install google-cloud-bigquery google-api-python-client google-auth google-auth-oauthlib pandas-gbq>=0.26.1 geopy

      - name: Write service account key
        run: |
          echo "${{ secrets.GCP_CREDENTIALS_JSON }}" | tee $HOME/service_account.json > /dev/null

      - name: Export environment variables
        run: |
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/service_account.json" >> $GITHUB_ENV

      - name: Verify GCP credentials
        run: |
          python - <<'EOF'
          from google.oauth2 import service_account
          import json, os

          creds_path = os.environ.get("GOOGLE_APPLICATION_CREDENTIALS")
          print("Using creds file:", creds_path)

          with open(creds_path, "r") as f:
              data = json.load(f)
              print("Loaded service account for:", data.get("client_email"))
          EOF

      - name: Run data pull + transform + uploads
        env:
          STRAVA_CLIENT_ID: ${{ secrets.STRAVA_CLIENT_ID }}
          STRAVA_CLIENT_SECRET: ${{ secrets.STRAVA_CLIENT_SECRET }}
          STRAVA_REFRESH_TOKEN: ${{ secrets.STRAVA_REFRESH_TOKEN }}
        run: |
          python strava_data_pull.py
